# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .net-CI

on:
  push:
    branches: [ "main" ]
    paths: [ "Application/**" ]
  pull_request:
    branches: [ "main" ]
    paths: [ "Application/**" ]
    
env:
  registryName: z6fkzrbnk6wuswthreg.azurecr.io
  repositoryName: wth/dotnetcoreapp
  dockerFolderPath: Application/src/RazorPagesTestSample
  tag: ${{github.run_number}} 


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ./Application/src/RazorPagesTestSample/
    - name: Build
      run: dotnet build --no-restore ./Application/src/RazorPagesTestSample/
    - name: Test
      run: dotnet test --no-build --verbosity normal ./Application/tests/RazorPagesTestSample.Tests/
  dockerbuild:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Docker login
      run: docker login ${{env.registryName}} -u ${{secrets.ACR_USERNAME}} -p ${{secrets.ACR_PASSWORD}}
    - name: Docker build
      run: docker build -t ${{env.registryName}}/${{env.repositoryName}}:${{env.tag}} --build-arg build_version=${{env.tag}} ${{env.dockerFolderPath}}
    - name: Docker push
      run: docker push ${{env.registryName}}/${{env.repositoryName}}:${{env.tag}}
  deployindev:
    env:
      env-name: dev
    runs-on: ubuntu-latest
    needs: dockerbuild
    steps:
    # Log into Azure
    - uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
    
    
    - uses: azure/webapps-deploy@v2
      with:
        app-name: z6fkzrbnk6wus-${{env.env-name}}
        images: ${{env.registryName}}/${{env.repositoryName}}:${{env.tag}}
  deployintest:
      env:
        env-name: test
      runs-on: ubuntu-latest
      needs: dockerbuild
      steps:
      # Log into Azure
      - uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      
      
      - uses: azure/webapps-deploy@v2
        with:
          app-name: z6fkzrbnk6wus-${{env.env-name}}
          images: ${{env.registryName}}/${{env.repositoryName}}:${{env.tag}}
    deployinprod:
      env:
        env-name: prod
      runs-on: ubuntu-latest
      needs: dockerbuild
      environment: prod
      
      steps:
      # Log into Azure
      - uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      
      
      - uses: azure/webapps-deploy@v2
        with:
          app-name: z6fkzrbnk6wus-${{env.env-name}}
          images: ${{env.registryName}}/${{env.repositoryName}}:${{env.tag}}         